[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[project]
name = "ai-tool"
version = "1.0.0"
description = "AI助手专用工具集，支持MCP协议调用和本地机器操作能力"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    {name = "AI-Tool Developer", email = "developer@ai-tool.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]

dependencies = [
    "fastmcp>=0.4.2",
    "requests>=2.31.0",
    "aiohttp>=3.8.0",
    "psutil>=5.9.0",
    "GPUtil>=1.4.0",
    "rich>=13.0.0",
    "pathlib2>=2.3.0",
    "validators>=0.20.0",
    "Pillow>=10.0.0",
    "asyncio-mqtt>=0.11.0",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/eragonht1/ai-tool-mcp"
Repository = "https://github.com/eragonht1/ai-tool-mcp.git"
Issues = "https://github.com/eragonht1/ai-tool-mcp/issues"

[dependency-groups]
dev = [
    "autoflake>=2.3.1",
    "autopep8>=2.3.2",
    "bandit>=1.8.5",
    "black>=25.1.0",
    "flake8>=7.3.0",
    "isort>=6.0.1",
    "mypy>=1.16.1",
    "pylint>=3.3.7",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "radon>=6.0.1",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | logs
  )/
)
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=. --cov-report=term-missing"
testpaths = [
    "tests",
]
asyncio_mode = "auto"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    ".venv/*",
    "__pycache__/*",
    "*.pyc",
    "logs/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.coverage.html]
# 禁用HTML覆盖率报告生成
skip_covered = true
skip_empty = true
